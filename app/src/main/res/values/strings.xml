<resources>
    <string name="app_name">Information security</string>

    <!-- Main_menu -->

    <string name="hello">Hello $username!</string>
    <string name="tasks">Tasks</string>
    <string name="info">Info</string>
    <string name="about">About</string>
    <string name="title_login">Sign in</string>
    <string name="title_registration">Registration</string>
    
    <!-- End_Main_menu -->

    <!-- About_menu -->

    <string name="about_text">
    Multi-guide for information security.\n
    Special for CTF.
    Application created by MMCS SFEDU command <b>"WHOAME</b>
    Hackaton, 2016.</string>

    <!-- End About_menu -->

    <string name="category_cryptography">Cryptography</string>
    <string name="category_web">Web</string>
    <string name="category_reverse">Reverse</string>
    <string name="category_recon">Recon</string>
    <string name="category_stego">Steganography</string>
    <string name="label_crypto">Crypto</string>
    <string name="label_recon">Recon</string>

    <string name="crypto1_tasks">It`s may be BASE. \nI don`t know.)) \n<b>Task:</b> \n0KfRgtC+LdGC0L4g0Y8g0LTQvtC70LbQtdC9INGC0YPRgiDQvdCw0L/QuNGB0LDRgtGM</string>
    <string name="crypto2_tasks">You like this! \n<b>ACL(T0P_G1FZ_OC1$)</b></string>
    <string name="recon1_tasks">http://vk.com/id385302312</string>

    <string name="crypto_base_info">
    <b>Base 16</b>\n
    \n
    Base 16 - это система счисления по основанию 16, т.е шестнадцатиричная система счисления. С ней вы могли и должны были столкнуться на уроках информатики. Алфавит этой кодировки состоит из цифр (0-9) и букв (A-F). Алгоритм преобразования остается примерно тем же, разве что теперь нам надо исходные двоичные числа разделить на тетрады (группы по 4 бита) и перевести их в соотвествии с таблицой кодировки в символы ASCII.\n
    \n
    <b>Base 32</b>\n
    \n
    Base 32 использует 32 символа: A-Z (или a-z), 2-7. Может содержать в конце кодированной последовательности несколько спецсимволов (по аналогии с base64). В данном алгоритме преобразования нам необходимо будет разделять двоичные значения на группы по 5 бит.\n
    </string>
    <string name="crypto_cesar_info">
    <b>Шифр Цезаря</b>, также известный как шифр сдвига, код Цезаря или сдвиг Цезаря — один из самых простых и наиболее широко известных методов шифрования. Шифр Цезаря — это вид шифра подстановки, в котором каждый символ в открытом тексте заменяется символом, находящимся на некотором постоянном числе позиций левее или правее него в алфавите. Например, в шифре со сдвигом вправо на 3, А была бы заменена на Г, Б станет Д, и так далее. Шифр назван в честь римского императора Гая Юлия Цезаря, использовавшего его для секретной переписки со своими генералами.\n
    Шаг шифрования, выполняемый шифром Цезаря, часто включается как часть более сложных схем, таких как шифр Виженера, и все ещё имеет современное приложение в системе ROT13. Как и все моноалфавитные шифры, шифр Цезаря легко взламывается и не имеет практически никакого применения на практике.
    </string>
    <string name="crypto_vigener_info">
    <b>Шифр Виженера</b> — метод полиалфавитного шифрования буквенного текста с использованием ключевого слова.\n
    <b>Квадрат Виженера</b>\n
    \n
    Например, предположим, что исходный текст имеет вид:\n
    \n
    ATTACKATDAWN\n
    Человек, посылающий сообщение, записывает ключевое слово («LEMON») циклически до тех пор, пока его длина не будет соответствовать длине исходного текста:\n
    \n
    LEMONLEMONLE\n
    Первый символ исходного текста A зашифрован последовательностью L, которая является первым символом ключа. Первый символ L шифрованного текста находится на пересечении строки L и столбца A в таблице Виженера. Точно так же для второго символа исходного текста используется второй символ ключа; то есть второй символ шифрованного текста X получается на пересечении строки E и столбца T. Остальная часть исходного текста шифруется подобным способом.\n
    \n
    Исходный текст:   ATTACKATDAWN\n
    \n
    Ключ: LEMONLEMONLE\n
    \n
    Зашифрованный текст: LXFOPVEFRNHR\n
    <b>Расшифрование</b>\n
    \n
    Криптоанализ шифра может быть построен в два этапа:\n
    \n
    1)Поиск длины ключа. Можно анализировать распределение частот в зашифрованном тексте с различным прореживанием. То есть брать текст, включающий каждую 2-ю букву зашифрованного текста, потом каждую 3-ю и т. д. Как только распределение частот букв будет сильно отличаться от равномерного (например, по энтропии), то можно говорить о найденной длине ключа.\n
    2)Криптоанализ. Совокупность l шифров Цезаря (где l — найденная длина ключа), которые по отдельности легко взламываются.\n
    </string>
    <string name="crypto_gronsfeld_info">
    <b>Шифр Гронсфельда</b> — полиалфавитный подстановочный шифр создан графом Гронсвельдом (руководителем первой дешифровальной службы Германии) в XVII веке. Шифр можно считать усовершенствованием шифра Цезаря (надежность) и Виженера / Бофора (скорость).\n
    Пусть дан исходный текст: C = «GRONSFELD» и ключ: K = «2015»\n
    \n
    <b>Ключ</b>\n
    \n
    Длина клера — 9 символов, значит и длина ключа также должна равнятся 9 символам. K = «201520152»\n
    \n
    Шифрование • M1 = «G».\n
    • y = 6 (y — номер столбца)\n
    • K1 = 2\n
    • С1 = T2 6 = «I» C += «I» (C = «I»)\n
    • M1 = «R».\n
    • y = 17\n
    • K2 = 0\n
    • С2 = T0 6 = «R» C += «I» (C = «IR»)\n
    . . . . . . . . .\n
    • m9 = «D»\n
    • y = 3\n
    • K9 = 2\n
    • С9 = T2 3 = «F»\n
    C += «I» (C = «IRPSUFFQF»)\n
    Шифротекст © — «IRPSUFFQF»\n
    \n
    <b>Дешифрование</b>\n
    • C1 = «I».\n
    • x = K1 = 2\n
    • y = 6\n
    • M += «G» (M = «G»)\n
    • C2 = «R»\n
    • x = K2 = 0\n
    • y = 17\n
    • M += «R» (M = «GR»)\n
    . . . . . . . . .\n
    • C10 = «H»\n
    • x = K9 = 2\n
    • y = 3\n
    • M += «F» (M = «GRONSFELD»)\n
    Дешифрованный текст (M) — «GRONSFELD»\n
    </string>

    <!-- Strings related to login -->
    <string name="prompt_text">dfghjkl;,kjh gfdsxfcghjnkmlmkhjg</string>
    <string name="prompt_email">Email</string>
    <string name="prompt_login">Login</string>
    <string name="prompt_full_name">Full Name</string>
    <string name="prompt_password">Password</string>
    <string name="prompt_password_repeat">Confirm password</string>

</resources>
